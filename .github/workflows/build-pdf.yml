name: Create a new PDF for each changed MD file

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          separator: '\n'

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          while IFS= read -r -d$"\\n" line; do
            echo "$line" >> changed_files.txt
          done <<< "${ALL_CHANGED_FILES}"
          echo "$line" >> a.txt
          echo "Changed files: $(cat changed_files.txt)"

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install pandoc
          sudo apt-get install texlive-latex-recommended

      - name: Convert each changed MD file to PDF
        run: |
          while IFS= read -r file; do
            if [[ $file == *.md ]]; then
              echo | pandoc -H "../tools/head.tex" --pdf-engine=xelatex "$file" -o "pdf/${file%.md}.pdf" -s -V fontsize=12pt -V geometry:"top=2cm, bottom=1.5cm, left=2cm, right=2cm" --resource-path="z_images"
            fi
          done < changed_files.txt
          rm changed_files.txt

      - name: Commit and push PDFs
        # This may fail if there are no changes to commit ¯\_(ツ)_/¯ 
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add pdf/*.pdf
          git commit -m "Add generated PDFs"
          git push